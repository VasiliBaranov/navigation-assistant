<Window x:Class="NavigationAssistant.Views.Implementation.NavigationWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:WpfExtensions="clr-namespace:NavigationAssistant.WpfExtensions" 
        Title="Navigation Assistant" 
        SizeToContent="WidthAndHeight"
        Topmost="True"
        ResizeMode="NoResize" 
        ShowInTaskbar="False" 
        WindowStartupLocation="CenterScreen"
        Closing="HandleClose" 
        Deactivated="HandleDeactivated"
        FocusManager.FocusedElement="{Binding ElementName=SearchTextBox}"
        KeyDown="HandleWindowKeyDown">
    <!--Don't set the window icon.
    Wpf uses the assembly icon, if specified.
    But it wont show up if running in debug from VS.
    Running externally or without attaching (ctrl + f5): the icon displays as expected.-->
    <Window.Resources>
        <!--Technique taken from 
        http://stackoverflow.com/questions/698830/wpf-listbox-change-selected-and-unfocused-style-to-not-be-grayed-out.
        Other techniques, e.g. from 
        http://vbcity.com/blogs/xtab/archive/2009/06/28/background-color-for-wpf-listbox-selected-item.aspx or
        http://wildermuth.com/2007/4/17/Changing_the_Selected_Style_of_ListBox_s_in_XAML
        do not work, as item selection is not updated when clicking not on Label text (but inside a line).-->
        <Style x:Key="ListBoxItemStyle" TargetType="ListBoxItem">
            <Style.Resources>
                <!--SelectedItem with focus-->
                <SolidColorBrush x:Key="{x:Static SystemColors.HighlightBrushKey}" Color="LightBlue" Opacity=".4"/>
                <!--SelectedItem without focus-->
                <SolidColorBrush x:Key="{x:Static SystemColors.ControlBrushKey}" Color="LightBlue" Opacity=".4"/>
            </Style.Resources>
        </Style>
        <Style x:Key="InitializingTextBlock" TargetType="TextBlock">
            <Setter Property="Width" Value="300" />
            <Setter Property="Height" Value="Auto" />
            <Setter Property="HorizontalAlignment" Value="Left" />
            <Setter Property="VerticalAlignment" Value="Top" />
            <Setter Property="Margin" Value="10" />
            <Setter Property="TextWrapping" Value="Wrap" />
        </Style>
        <Style x:Key="SearchTextBox" TargetType="TextBox">
            <Setter Property="HorizontalAlignment" Value="Stretch" />
            <Setter Property="Width" Value="Auto" />
            <Setter Property="MinWidth" Value="300" />
        </Style>
        <Style x:Key="MatchesListBox" TargetType="ListBox">
            <Setter Property="HorizontalAlignment" Value="Left" />
            <Setter Property="Height" Value="Auto" />
            <Setter Property="MinWidth" Value="300" />
        </Style>
    </Window.Resources>
    <StackPanel Width="Auto" 
                Height="Auto" 
                VerticalAlignment="Top" 
                KeyDown="HandlePanelKeyDown">
        <TextBlock x:Name="InitializingTextBlock" 
                   Style="{StaticResource InitializingTextBlock}"
                   Visibility="{Binding Path=InitializingScreenVisiblity}" >
            Please wait while the computer folders are being parsed. This may take several minutes.
        </TextBlock>
        <TextBox x:Name="SearchTextBox" 
                 Style="{StaticResource SearchTextBox}"
                 Text="{Binding Path=SearchText, UpdateSourceTrigger=PropertyChanged}"
                 PreviewKeyDown="HandleSearchTextPreviewKeyDown"
                 WpfExtensions:SizeExtension.Observe="True"
                 WpfExtensions:SizeExtension.ObservedHeight="{Binding Path=SearchTextBoxHeight, Mode=OneWayToSource}"
                 Visibility="{Binding Path=MainScreenVisiblity}"/>
        <ListBox x:Name="MatchesListBox"
                 Style="{StaticResource MatchesListBox}"
                 ItemsSource="{Binding Path=Matches}"
                 SelectedItem="{Binding Path=SelectedMatch}"
                 IsSynchronizedWithCurrentItem="True"
                 MouseUp="HandleMatchesListMouseUp"
                 ItemContainerStyle="{StaticResource ListBoxItemStyle}"
                 MaxHeight="{Binding Path=MaxMatchesListBoxHeight, Mode=OneWay}"
                 Width="{Binding Path=MatchesListBoxWidth}"
                 WpfExtensions:SizeExtension.Observe="True"
                 WpfExtensions:SizeExtension.ObservedWidth="{Binding Path=MatchesListBoxActualWidth, Mode=OneWayToSource}"
                 WpfExtensions:ScrollExtension.AutoScrollToCurrentItem="True"
                 Visibility="{Binding Path=MainScreenVisiblity}">
            <!--AutoScrollToCurrentItem is set as far we allow selection change with up/down keys even if the control is not focused.-->
            <ListBox.ItemTemplate>
                <DataTemplate>
                    <Label HorizontalAlignment="Left" Width="Auto" Content="{Binding Path=TextBlock}" />
                </DataTemplate>
            </ListBox.ItemTemplate>
        </ListBox>
    </StackPanel>
</Window>
